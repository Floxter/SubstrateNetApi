//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Extrinsics;
using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletBounties;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.SpRuntime;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletBounties
{
    
    
    public sealed class BountiesStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public BountiesStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> BountyCount
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> BountyCount(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Bounties", "BountyCount", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> Bounties
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletBounties.Bounty> Bounties(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Bounties", "Bounties", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletBounties.Bounty>(parameters, token);
        }
        
        /// <summary>
        /// >> BountyDescriptions
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>> BountyDescriptions(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Bounties", "BountyDescriptions", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>>(parameters, token);
        }
        
        /// <summary>
        /// >> BountyApprovals
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.Types.Primitive.U32>> BountyApprovals(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Bounties", "BountyApprovals", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.Types.Primitive.U32>>(parameters, token);
        }
    }
    
    public sealed class BountiesCalls
    {
        
        /// <summary>
        /// >> propose_bounty
        /// </summary>
        public static Method ProposeBounty(BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> value, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> description)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(value.Encode());
            byteArray.AddRange(description.Encode());
            return new Method(32, "Bounties", 0, "propose_bounty", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_bounty
        /// </summary>
        public static Method ApproveBounty(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            return new Method(32, "Bounties", 1, "approve_bounty", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> propose_curator
        /// </summary>
        public static Method ProposeCurator(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress curator, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> fee)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            byteArray.AddRange(curator.Encode());
            byteArray.AddRange(fee.Encode());
            return new Method(32, "Bounties", 2, "propose_curator", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> unassign_curator
        /// </summary>
        public static Method UnassignCurator(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            return new Method(32, "Bounties", 3, "unassign_curator", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> accept_curator
        /// </summary>
        public static Method AcceptCurator(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            return new Method(32, "Bounties", 4, "accept_curator", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> award_bounty
        /// </summary>
        public static Method AwardBounty(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress beneficiary)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            byteArray.AddRange(beneficiary.Encode());
            return new Method(32, "Bounties", 5, "award_bounty", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> claim_bounty
        /// </summary>
        public static Method ClaimBounty(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            return new Method(32, "Bounties", 6, "claim_bounty", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> close_bounty
        /// </summary>
        public static Method CloseBounty(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            return new Method(32, "Bounties", 7, "close_bounty", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> extend_bounty_expiry
        /// </summary>
        public static Method ExtendBountyExpiry(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> bounty_id, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> remark)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(bounty_id.Encode());
            byteArray.AddRange(remark.Encode());
            return new Method(32, "Bounties", 8, "extend_bounty_expiry", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> BountyProposed
    /// </summary>
    public sealed class EventBountyProposed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> BountyRejected
    /// </summary>
    public sealed class EventBountyRejected : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> BountyBecameActive
    /// </summary>
    public sealed class EventBountyBecameActive : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> BountyAwarded
    /// </summary>
    public sealed class EventBountyAwarded : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> BountyClaimed
    /// </summary>
    public sealed class EventBountyClaimed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.Types.Primitive.U128, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> BountyCanceled
    /// </summary>
    public sealed class EventBountyCanceled : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> BountyExtended
    /// </summary>
    public sealed class EventBountyExtended : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    public enum BountiesErrors
    {
        
        /// <summary>
        /// >> InsufficientProposersBalance
        /// </summary>
        InsufficientProposersBalance,
        
        /// <summary>
        /// >> InvalidIndex
        /// </summary>
        InvalidIndex,
        
        /// <summary>
        /// >> ReasonTooBig
        /// </summary>
        ReasonTooBig,
        
        /// <summary>
        /// >> UnexpectedStatus
        /// </summary>
        UnexpectedStatus,
        
        /// <summary>
        /// >> RequireCurator
        /// </summary>
        RequireCurator,
        
        /// <summary>
        /// >> InvalidValue
        /// </summary>
        InvalidValue,
        
        /// <summary>
        /// >> InvalidFee
        /// </summary>
        InvalidFee,
        
        /// <summary>
        /// >> PendingPayout
        /// </summary>
        PendingPayout,
        
        /// <summary>
        /// >> Premature
        /// </summary>
        Premature,
    }
}
