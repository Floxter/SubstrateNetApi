//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletContracts;
using SubstrateNetApi.Model.PrimitiveTypes;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.SpRuntime;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletContracts
{
    
    
    public sealed class ContractsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public ContractsStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> PristineCode
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>> PristineCode(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "PristineCode", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>>(parameters, token);
        }
        
        /// <summary>
        /// >> CodeStorage
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletContracts.PrefabWasmModule> CodeStorage(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "CodeStorage", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletContracts.PrefabWasmModule>(parameters, token);
        }
        
        /// <summary>
        /// >> AccountCounter
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U64> AccountCounter(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Contracts", "AccountCounter", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U64>(parameters, token);
        }
        
        /// <summary>
        /// >> ContractInfoOf
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletContracts.RawContractInfo> ContractInfoOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "ContractInfoOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletContracts.RawContractInfo>(parameters, token);
        }
        
        /// <summary>
        /// >> DeletionQueue
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.PalletContracts.DeletedContract>> DeletionQueue(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Contracts", "DeletionQueue", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.PalletContracts.DeletedContract>>(parameters, token);
        }
    }
    
    public sealed class ContractsCalls
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public ContractsCalls(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> call
        /// </summary>
        public GenericExtrinsicCall Call(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress dest, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> value, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data)
        {
            return new GenericExtrinsicCall(18, "Contracts", 0, "call", dest, value, gas_limit, data);
        }
        
        /// <summary>
        /// >> instantiate_with_code
        /// </summary>
        public GenericExtrinsicCall InstantiateWithCode(BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> endowment, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> code, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> salt)
        {
            return new GenericExtrinsicCall(18, "Contracts", 1, "instantiate_with_code", endowment, gas_limit, code, data, salt);
        }
        
        /// <summary>
        /// >> instantiate
        /// </summary>
        public GenericExtrinsicCall Instantiate(BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> endowment, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, SubstrateNetApi.Model.PrimitiveTypes.H256 code_hash, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> salt)
        {
            return new GenericExtrinsicCall(18, "Contracts", 2, "instantiate", endowment, gas_limit, code_hash, data, salt);
        }
    }
    
    /// <summary>
    /// >> Instantiated
    /// </summary>
    public sealed class EventInstantiated : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> Terminated
    /// </summary>
    public sealed class EventTerminated : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> CodeStored
    /// </summary>
    public sealed class EventCodeStored : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256>
    {
    }
    
    /// <summary>
    /// >> ScheduleUpdated
    /// </summary>
    public sealed class EventScheduleUpdated : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> ContractEmitted
    /// </summary>
    public sealed class EventContractEmitted : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>>
    {
    }
    
    /// <summary>
    /// >> CodeRemoved
    /// </summary>
    public sealed class EventCodeRemoved : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256>
    {
    }
    
    public enum ContractsErrors
    {
        
        /// <summary>
        /// >> InvalidScheduleVersion
        /// </summary>
        InvalidScheduleVersion,
        
        /// <summary>
        /// >> OutOfGas
        /// </summary>
        OutOfGas,
        
        /// <summary>
        /// >> OutputBufferTooSmall
        /// </summary>
        OutputBufferTooSmall,
        
        /// <summary>
        /// >> BelowSubsistenceThreshold
        /// </summary>
        BelowSubsistenceThreshold,
        
        /// <summary>
        /// >> NewContractNotFunded
        /// </summary>
        NewContractNotFunded,
        
        /// <summary>
        /// >> TransferFailed
        /// </summary>
        TransferFailed,
        
        /// <summary>
        /// >> MaxCallDepthReached
        /// </summary>
        MaxCallDepthReached,
        
        /// <summary>
        /// >> ContractNotFound
        /// </summary>
        ContractNotFound,
        
        /// <summary>
        /// >> CodeTooLarge
        /// </summary>
        CodeTooLarge,
        
        /// <summary>
        /// >> CodeNotFound
        /// </summary>
        CodeNotFound,
        
        /// <summary>
        /// >> OutOfBounds
        /// </summary>
        OutOfBounds,
        
        /// <summary>
        /// >> DecodingFailed
        /// </summary>
        DecodingFailed,
        
        /// <summary>
        /// >> ContractTrapped
        /// </summary>
        ContractTrapped,
        
        /// <summary>
        /// >> ValueTooLarge
        /// </summary>
        ValueTooLarge,
        
        /// <summary>
        /// >> TerminatedWhileReentrant
        /// </summary>
        TerminatedWhileReentrant,
        
        /// <summary>
        /// >> InputForwarded
        /// </summary>
        InputForwarded,
        
        /// <summary>
        /// >> RandomSubjectTooLong
        /// </summary>
        RandomSubjectTooLong,
        
        /// <summary>
        /// >> TooManyTopics
        /// </summary>
        TooManyTopics,
        
        /// <summary>
        /// >> DuplicateTopics
        /// </summary>
        DuplicateTopics,
        
        /// <summary>
        /// >> NoChainExtension
        /// </summary>
        NoChainExtension,
        
        /// <summary>
        /// >> DeletionQueueFull
        /// </summary>
        DeletionQueueFull,
        
        /// <summary>
        /// >> StorageExhausted
        /// </summary>
        StorageExhausted,
        
        /// <summary>
        /// >> DuplicateContract
        /// </summary>
        DuplicateContract,
        
        /// <summary>
        /// >> TerminatedInConstructor
        /// </summary>
        TerminatedInConstructor,
        
        /// <summary>
        /// >> DebugMessageInvalidUTF8
        /// </summary>
        DebugMessageInvalidUTF8,
        
        /// <summary>
        /// >> ReentranceDenied
        /// </summary>
        ReentranceDenied,
    }
}
