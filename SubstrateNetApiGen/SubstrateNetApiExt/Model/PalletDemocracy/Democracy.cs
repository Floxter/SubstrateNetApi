//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletDemocracy;
using SubstrateNetApi.Model.PrimitiveTypes;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletDemocracy
{
    
    
    public sealed class DemocracyStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public DemocracyStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> PublicPropCount
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> PublicPropCount(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "PublicPropCount", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> PublicProps
        /// </summary>
        public async Task<BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,SubstrateNetApi.Model.PrimitiveTypes.H256,SubstrateNetApi.Model.SpCore.AccountId32>>> PublicProps(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "PublicProps", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,SubstrateNetApi.Model.PrimitiveTypes.H256,SubstrateNetApi.Model.SpCore.AccountId32>>>(parameters, token);
        }
        
        /// <summary>
        /// >> DepositOf
        /// </summary>
        public async Task<BaseTuple<BaseVec<SubstrateNetApi.Model.SpCore.AccountId32>,SubstrateNetApi.Model.Types.Primitive.U128>> DepositOf(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "DepositOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<BaseVec<SubstrateNetApi.Model.SpCore.AccountId32>,SubstrateNetApi.Model.Types.Primitive.U128>>(parameters, token);
        }
        
        /// <summary>
        /// >> Preimages
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletDemocracy.EnumPreimageStatus> Preimages(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "Preimages", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletDemocracy.EnumPreimageStatus>(parameters, token);
        }
        
        /// <summary>
        /// >> ReferendumCount
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> ReferendumCount(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "ReferendumCount", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> LowestUnbaked
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> LowestUnbaked(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "LowestUnbaked", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> ReferendumInfoOf
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletDemocracy.EnumReferendumInfo> ReferendumInfoOf(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "ReferendumInfoOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletDemocracy.EnumReferendumInfo>(parameters, token);
        }
        
        /// <summary>
        /// >> VotingOf
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletDemocracy.EnumVoting> VotingOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "VotingOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletDemocracy.EnumVoting>(parameters, token);
        }
        
        /// <summary>
        /// >> Locks
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> Locks(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "Locks", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> LastTabledWasExternal
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.Bool> LastTabledWasExternal(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "LastTabledWasExternal", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.Bool>(parameters, token);
        }
        
        /// <summary>
        /// >> NextExternal
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256,SubstrateNetApi.Model.PalletDemocracy.EnumVoteThreshold>> NextExternal(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "NextExternal", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256,SubstrateNetApi.Model.PalletDemocracy.EnumVoteThreshold>>(parameters, token);
        }
        
        /// <summary>
        /// >> Blacklist
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,BaseVec<SubstrateNetApi.Model.SpCore.AccountId32>>> Blacklist(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "Blacklist", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,BaseVec<SubstrateNetApi.Model.SpCore.AccountId32>>>(parameters, token);
        }
        
        /// <summary>
        /// >> Cancellations
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.Bool> Cancellations(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Democracy", "Cancellations", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.Bool>(parameters, token);
        }
        
        /// <summary>
        /// >> StorageVersion
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletDemocracy.EnumReleases> StorageVersion(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Democracy", "StorageVersion", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletDemocracy.EnumReleases>(parameters, token);
        }
    }
    
    public sealed class DemocracyCalls
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public DemocracyCalls(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> propose
        /// </summary>
        public GenericExtrinsicCall Propose(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> value)
        {
            return new GenericExtrinsicCall(11, "Democracy", 0, "propose", proposal_hash, value);
        }
        
        /// <summary>
        /// >> second
        /// </summary>
        public GenericExtrinsicCall Second(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> proposal, BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> seconds_upper_bound)
        {
            return new GenericExtrinsicCall(11, "Democracy", 1, "second", proposal, seconds_upper_bound);
        }
        
        /// <summary>
        /// >> vote
        /// </summary>
        public GenericExtrinsicCall Vote(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> ref_index, SubstrateNetApi.Model.PalletDemocracy.EnumAccountVote vote)
        {
            return new GenericExtrinsicCall(11, "Democracy", 2, "vote", ref_index, vote);
        }
        
        /// <summary>
        /// >> emergency_cancel
        /// </summary>
        public GenericExtrinsicCall EmergencyCancel(SubstrateNetApi.Model.Types.Primitive.U32 ref_index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 3, "emergency_cancel", ref_index);
        }
        
        /// <summary>
        /// >> external_propose
        /// </summary>
        public GenericExtrinsicCall ExternalPropose(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash)
        {
            return new GenericExtrinsicCall(11, "Democracy", 4, "external_propose", proposal_hash);
        }
        
        /// <summary>
        /// >> external_propose_majority
        /// </summary>
        public GenericExtrinsicCall ExternalProposeMajority(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash)
        {
            return new GenericExtrinsicCall(11, "Democracy", 5, "external_propose_majority", proposal_hash);
        }
        
        /// <summary>
        /// >> external_propose_default
        /// </summary>
        public GenericExtrinsicCall ExternalProposeDefault(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash)
        {
            return new GenericExtrinsicCall(11, "Democracy", 6, "external_propose_default", proposal_hash);
        }
        
        /// <summary>
        /// >> fast_track
        /// </summary>
        public GenericExtrinsicCall FastTrack(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash, SubstrateNetApi.Model.Types.Primitive.U32 voting_period, SubstrateNetApi.Model.Types.Primitive.U32 delay)
        {
            return new GenericExtrinsicCall(11, "Democracy", 7, "fast_track", proposal_hash, voting_period, delay);
        }
        
        /// <summary>
        /// >> veto_external
        /// </summary>
        public GenericExtrinsicCall VetoExternal(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash)
        {
            return new GenericExtrinsicCall(11, "Democracy", 8, "veto_external", proposal_hash);
        }
        
        /// <summary>
        /// >> cancel_referendum
        /// </summary>
        public GenericExtrinsicCall CancelReferendum(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> ref_index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 9, "cancel_referendum", ref_index);
        }
        
        /// <summary>
        /// >> cancel_queued
        /// </summary>
        public GenericExtrinsicCall CancelQueued(SubstrateNetApi.Model.Types.Primitive.U32 which)
        {
            return new GenericExtrinsicCall(11, "Democracy", 10, "cancel_queued", which);
        }
        
        /// <summary>
        /// >> delegate
        /// </summary>
        public GenericExtrinsicCall Delegate(SubstrateNetApi.Model.SpCore.AccountId32 to, SubstrateNetApi.Model.PalletDemocracy.EnumConviction conviction, SubstrateNetApi.Model.Types.Primitive.U128 balance)
        {
            return new GenericExtrinsicCall(11, "Democracy", 11, "delegate", to, conviction, balance);
        }
        
        /// <summary>
        /// >> undelegate
        /// </summary>
        public GenericExtrinsicCall Undelegate()
        {
            return new GenericExtrinsicCall(11, "Democracy", 12, "undelegate");
        }
        
        /// <summary>
        /// >> clear_public_proposals
        /// </summary>
        public GenericExtrinsicCall ClearPublicProposals()
        {
            return new GenericExtrinsicCall(11, "Democracy", 13, "clear_public_proposals");
        }
        
        /// <summary>
        /// >> note_preimage
        /// </summary>
        public GenericExtrinsicCall NotePreimage(BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> encoded_proposal)
        {
            return new GenericExtrinsicCall(11, "Democracy", 14, "note_preimage", encoded_proposal);
        }
        
        /// <summary>
        /// >> note_preimage_operational
        /// </summary>
        public GenericExtrinsicCall NotePreimageOperational(BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> encoded_proposal)
        {
            return new GenericExtrinsicCall(11, "Democracy", 15, "note_preimage_operational", encoded_proposal);
        }
        
        /// <summary>
        /// >> note_imminent_preimage
        /// </summary>
        public GenericExtrinsicCall NoteImminentPreimage(BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> encoded_proposal)
        {
            return new GenericExtrinsicCall(11, "Democracy", 16, "note_imminent_preimage", encoded_proposal);
        }
        
        /// <summary>
        /// >> note_imminent_preimage_operational
        /// </summary>
        public GenericExtrinsicCall NoteImminentPreimageOperational(BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> encoded_proposal)
        {
            return new GenericExtrinsicCall(11, "Democracy", 17, "note_imminent_preimage_operational", encoded_proposal);
        }
        
        /// <summary>
        /// >> reap_preimage
        /// </summary>
        public GenericExtrinsicCall ReapPreimage(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash, BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> proposal_len_upper_bound)
        {
            return new GenericExtrinsicCall(11, "Democracy", 18, "reap_preimage", proposal_hash, proposal_len_upper_bound);
        }
        
        /// <summary>
        /// >> unlock
        /// </summary>
        public GenericExtrinsicCall Unlock(SubstrateNetApi.Model.SpCore.AccountId32 target)
        {
            return new GenericExtrinsicCall(11, "Democracy", 19, "unlock", target);
        }
        
        /// <summary>
        /// >> remove_vote
        /// </summary>
        public GenericExtrinsicCall RemoveVote(SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 20, "remove_vote", index);
        }
        
        /// <summary>
        /// >> remove_other_vote
        /// </summary>
        public GenericExtrinsicCall RemoveOtherVote(SubstrateNetApi.Model.SpCore.AccountId32 target, SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 21, "remove_other_vote", target, index);
        }
        
        /// <summary>
        /// >> enact_proposal
        /// </summary>
        public GenericExtrinsicCall EnactProposal(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash, SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 22, "enact_proposal", proposal_hash, index);
        }
        
        /// <summary>
        /// >> blacklist
        /// </summary>
        public GenericExtrinsicCall Blacklist(SubstrateNetApi.Model.PrimitiveTypes.H256 proposal_hash, BaseOpt<SubstrateNetApi.Model.Types.Primitive.U32> maybe_ref_index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 23, "blacklist", proposal_hash, maybe_ref_index);
        }
        
        /// <summary>
        /// >> cancel_proposal
        /// </summary>
        public GenericExtrinsicCall CancelProposal(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> prop_index)
        {
            return new GenericExtrinsicCall(11, "Democracy", 24, "cancel_proposal", prop_index);
        }
    }
    
    /// <summary>
    /// >> Proposed
    /// </summary>
    public sealed class EventProposed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> Tabled
    /// </summary>
    public sealed class EventTabled : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.Types.Primitive.U128, BaseVec<SubstrateNetApi.Model.SpCore.AccountId32>>
    {
    }
    
    /// <summary>
    /// >> ExternalTabled
    /// </summary>
    public sealed class EventExternalTabled : BaseTuple
    {
    }
    
    /// <summary>
    /// >> Started
    /// </summary>
    public sealed class EventStarted : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.PalletDemocracy.EnumVoteThreshold>
    {
    }
    
    /// <summary>
    /// >> Passed
    /// </summary>
    public sealed class EventPassed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> NotPassed
    /// </summary>
    public sealed class EventNotPassed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> Cancelled
    /// </summary>
    public sealed class EventCancelled : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> Executed
    /// </summary>
    public sealed class EventExecuted : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, BaseTuple<BaseTuple,  SubstrateNetApi.Model.SpRuntime.EnumDispatchError>>
    {
    }
    
    /// <summary>
    /// >> Delegated
    /// </summary>
    public sealed class EventDelegated : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> Undelegated
    /// </summary>
    public sealed class EventUndelegated : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> Vetoed
    /// </summary>
    public sealed class EventVetoed : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> PreimageNoted
    /// </summary>
    public sealed class EventPreimageNoted : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> PreimageUsed
    /// </summary>
    public sealed class EventPreimageUsed : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> PreimageInvalid
    /// </summary>
    public sealed class EventPreimageInvalid : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> PreimageMissing
    /// </summary>
    public sealed class EventPreimageMissing : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> PreimageReaped
    /// </summary>
    public sealed class EventPreimageReaped : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> Blacklisted
    /// </summary>
    public sealed class EventBlacklisted : BaseTuple<SubstrateNetApi.Model.PrimitiveTypes.H256>
    {
    }
    
    public enum DemocracyErrors
    {
        
        /// <summary>
        /// >> ValueLow
        /// </summary>
        ValueLow,
        
        /// <summary>
        /// >> ProposalMissing
        /// </summary>
        ProposalMissing,
        
        /// <summary>
        /// >> AlreadyCanceled
        /// </summary>
        AlreadyCanceled,
        
        /// <summary>
        /// >> DuplicateProposal
        /// </summary>
        DuplicateProposal,
        
        /// <summary>
        /// >> ProposalBlacklisted
        /// </summary>
        ProposalBlacklisted,
        
        /// <summary>
        /// >> NotSimpleMajority
        /// </summary>
        NotSimpleMajority,
        
        /// <summary>
        /// >> InvalidHash
        /// </summary>
        InvalidHash,
        
        /// <summary>
        /// >> NoProposal
        /// </summary>
        NoProposal,
        
        /// <summary>
        /// >> AlreadyVetoed
        /// </summary>
        AlreadyVetoed,
        
        /// <summary>
        /// >> DuplicatePreimage
        /// </summary>
        DuplicatePreimage,
        
        /// <summary>
        /// >> NotImminent
        /// </summary>
        NotImminent,
        
        /// <summary>
        /// >> TooEarly
        /// </summary>
        TooEarly,
        
        /// <summary>
        /// >> Imminent
        /// </summary>
        Imminent,
        
        /// <summary>
        /// >> PreimageMissing
        /// </summary>
        PreimageMissing,
        
        /// <summary>
        /// >> ReferendumInvalid
        /// </summary>
        ReferendumInvalid,
        
        /// <summary>
        /// >> PreimageInvalid
        /// </summary>
        PreimageInvalid,
        
        /// <summary>
        /// >> NoneWaiting
        /// </summary>
        NoneWaiting,
        
        /// <summary>
        /// >> NotVoter
        /// </summary>
        NotVoter,
        
        /// <summary>
        /// >> NoPermission
        /// </summary>
        NoPermission,
        
        /// <summary>
        /// >> AlreadyDelegating
        /// </summary>
        AlreadyDelegating,
        
        /// <summary>
        /// >> InsufficientFunds
        /// </summary>
        InsufficientFunds,
        
        /// <summary>
        /// >> NotDelegating
        /// </summary>
        NotDelegating,
        
        /// <summary>
        /// >> VotesExist
        /// </summary>
        VotesExist,
        
        /// <summary>
        /// >> InstantNotAllowed
        /// </summary>
        InstantNotAllowed,
        
        /// <summary>
        /// >> Nonsense
        /// </summary>
        Nonsense,
        
        /// <summary>
        /// >> WrongUpperBound
        /// </summary>
        WrongUpperBound,
        
        /// <summary>
        /// >> MaxVotesReached
        /// </summary>
        MaxVotesReached,
        
        /// <summary>
        /// >> TooManyProposals
        /// </summary>
        TooManyProposals,
    }
}
