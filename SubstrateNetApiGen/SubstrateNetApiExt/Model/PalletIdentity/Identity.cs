//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.FrameSupport;
using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletIdentity;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.SpRuntime;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletIdentity
{
    
    
    public sealed class IdentityStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public IdentityStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> IdentityOf
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletIdentity.Registration> IdentityOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Identity", "IdentityOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletIdentity.Registration>(parameters, token);
        }
        
        /// <summary>
        /// >> SuperOf
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.PalletIdentity.EnumData>> SuperOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Identity", "SuperOf", Storage.Type.Map, new[] {Storage.Hasher.BlakeTwo128Concat}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.PalletIdentity.EnumData>>(parameters, token);
        }
        
        /// <summary>
        /// >> SubsOf
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U128,SubstrateNetApi.Model.FrameSupport.BoundedVec>> SubsOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Identity", "SubsOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U128,SubstrateNetApi.Model.FrameSupport.BoundedVec>>(parameters, token);
        }
        
        /// <summary>
        /// >> Registrars
        /// </summary>
        public async Task<SubstrateNetApi.Model.FrameSupport.BoundedVec> Registrars(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Identity", "Registrars", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.FrameSupport.BoundedVec>(parameters, token);
        }
    }
    
    public sealed class IdentityCalls
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public IdentityCalls(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> add_registrar
        /// </summary>
        public GenericExtrinsicCall AddRegistrar(SubstrateNetApi.Model.SpCore.AccountId32 account)
        {
            return new GenericExtrinsicCall(25, "Identity", 0, "add_registrar", account);
        }
        
        /// <summary>
        /// >> set_identity
        /// </summary>
        public GenericExtrinsicCall SetIdentity(SubstrateNetApi.Model.PalletIdentity.IdentityInfo info)
        {
            return new GenericExtrinsicCall(25, "Identity", 1, "set_identity", info);
        }
        
        /// <summary>
        /// >> set_subs
        /// </summary>
        public GenericExtrinsicCall SetSubs(BaseVec<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.PalletIdentity.EnumData>> subs)
        {
            return new GenericExtrinsicCall(25, "Identity", 2, "set_subs", subs);
        }
        
        /// <summary>
        /// >> clear_identity
        /// </summary>
        public GenericExtrinsicCall ClearIdentity()
        {
            return new GenericExtrinsicCall(25, "Identity", 3, "clear_identity");
        }
        
        /// <summary>
        /// >> request_judgement
        /// </summary>
        public GenericExtrinsicCall RequestJudgement(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> reg_index, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> max_fee)
        {
            return new GenericExtrinsicCall(25, "Identity", 4, "request_judgement", reg_index, max_fee);
        }
        
        /// <summary>
        /// >> cancel_request
        /// </summary>
        public GenericExtrinsicCall CancelRequest(SubstrateNetApi.Model.Types.Primitive.U32 reg_index)
        {
            return new GenericExtrinsicCall(25, "Identity", 5, "cancel_request", reg_index);
        }
        
        /// <summary>
        /// >> set_fee
        /// </summary>
        public GenericExtrinsicCall SetFee(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> index, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> fee)
        {
            return new GenericExtrinsicCall(25, "Identity", 6, "set_fee", index, fee);
        }
        
        /// <summary>
        /// >> set_account_id
        /// </summary>
        public GenericExtrinsicCall SetAccountId(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> index, SubstrateNetApi.Model.SpCore.AccountId32 @new)
        {
            return new GenericExtrinsicCall(25, "Identity", 7, "set_account_id", index, @new);
        }
        
        /// <summary>
        /// >> set_fields
        /// </summary>
        public GenericExtrinsicCall SetFields(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> index, SubstrateNetApi.Model.PalletIdentity.BitFlags fields)
        {
            return new GenericExtrinsicCall(25, "Identity", 8, "set_fields", index, fields);
        }
        
        /// <summary>
        /// >> provide_judgement
        /// </summary>
        public GenericExtrinsicCall ProvideJudgement(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> reg_index, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress target, SubstrateNetApi.Model.PalletIdentity.EnumJudgement judgement)
        {
            return new GenericExtrinsicCall(25, "Identity", 9, "provide_judgement", reg_index, target, judgement);
        }
        
        /// <summary>
        /// >> kill_identity
        /// </summary>
        public GenericExtrinsicCall KillIdentity(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress target)
        {
            return new GenericExtrinsicCall(25, "Identity", 10, "kill_identity", target);
        }
        
        /// <summary>
        /// >> add_sub
        /// </summary>
        public GenericExtrinsicCall AddSub(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress sub, SubstrateNetApi.Model.PalletIdentity.EnumData data)
        {
            return new GenericExtrinsicCall(25, "Identity", 11, "add_sub", sub, data);
        }
        
        /// <summary>
        /// >> rename_sub
        /// </summary>
        public GenericExtrinsicCall RenameSub(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress sub, SubstrateNetApi.Model.PalletIdentity.EnumData data)
        {
            return new GenericExtrinsicCall(25, "Identity", 12, "rename_sub", sub, data);
        }
        
        /// <summary>
        /// >> remove_sub
        /// </summary>
        public GenericExtrinsicCall RemoveSub(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress sub)
        {
            return new GenericExtrinsicCall(25, "Identity", 13, "remove_sub", sub);
        }
        
        /// <summary>
        /// >> quit_sub
        /// </summary>
        public GenericExtrinsicCall QuitSub()
        {
            return new GenericExtrinsicCall(25, "Identity", 14, "quit_sub");
        }
    }
    
    /// <summary>
    /// >> IdentitySet
    /// </summary>
    public sealed class EventIdentitySet : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    /// <summary>
    /// >> IdentityCleared
    /// </summary>
    public sealed class EventIdentityCleared : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> IdentityKilled
    /// </summary>
    public sealed class EventIdentityKilled : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> JudgementRequested
    /// </summary>
    public sealed class EventJudgementRequested : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> JudgementUnrequested
    /// </summary>
    public sealed class EventJudgementUnrequested : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> JudgementGiven
    /// </summary>
    public sealed class EventJudgementGiven : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> RegistrarAdded
    /// </summary>
    public sealed class EventRegistrarAdded : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> SubIdentityAdded
    /// </summary>
    public sealed class EventSubIdentityAdded : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> SubIdentityRemoved
    /// </summary>
    public sealed class EventSubIdentityRemoved : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    /// <summary>
    /// >> SubIdentityRevoked
    /// </summary>
    public sealed class EventSubIdentityRevoked : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U128>
    {
    }
    
    public enum IdentityErrors
    {
        
        /// <summary>
        /// >> TooManySubAccounts
        /// </summary>
        TooManySubAccounts,
        
        /// <summary>
        /// >> NotFound
        /// </summary>
        NotFound,
        
        /// <summary>
        /// >> NotNamed
        /// </summary>
        NotNamed,
        
        /// <summary>
        /// >> EmptyIndex
        /// </summary>
        EmptyIndex,
        
        /// <summary>
        /// >> FeeChanged
        /// </summary>
        FeeChanged,
        
        /// <summary>
        /// >> NoIdentity
        /// </summary>
        NoIdentity,
        
        /// <summary>
        /// >> StickyJudgement
        /// </summary>
        StickyJudgement,
        
        /// <summary>
        /// >> JudgementGiven
        /// </summary>
        JudgementGiven,
        
        /// <summary>
        /// >> InvalidJudgement
        /// </summary>
        InvalidJudgement,
        
        /// <summary>
        /// >> InvalidIndex
        /// </summary>
        InvalidIndex,
        
        /// <summary>
        /// >> InvalidTarget
        /// </summary>
        InvalidTarget,
        
        /// <summary>
        /// >> TooManyFields
        /// </summary>
        TooManyFields,
        
        /// <summary>
        /// >> TooManyRegistrars
        /// </summary>
        TooManyRegistrars,
        
        /// <summary>
        /// >> AlreadyClaimed
        /// </summary>
        AlreadyClaimed,
        
        /// <summary>
        /// >> NotSub
        /// </summary>
        NotSub,
        
        /// <summary>
        /// >> NotOwned
        /// </summary>
        NotOwned,
    }
}
