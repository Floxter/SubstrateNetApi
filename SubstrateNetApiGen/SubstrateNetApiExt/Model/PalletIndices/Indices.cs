//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletIndices
{
    
    
    public sealed class IndicesStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public IndicesStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> Accounts
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.Types.Primitive.U128,SubstrateNetApi.Model.Types.Primitive.Bool>> Accounts(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Indices", "Accounts", Storage.Type.Map, new[] {Storage.Hasher.BlakeTwo128Concat}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.Types.Primitive.U128,SubstrateNetApi.Model.Types.Primitive.Bool>>(parameters, token);
        }
    }
    
    public sealed class IndicesCalls
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public IndicesCalls(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> claim
        /// </summary>
        public GenericExtrinsicCall Claim(SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(5, "Indices", 0, "claim", index);
        }
        
        /// <summary>
        /// >> transfer
        /// </summary>
        public GenericExtrinsicCall Transfer(SubstrateNetApi.Model.SpCore.AccountId32 @new, SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(5, "Indices", 1, "transfer", @new, index);
        }
        
        /// <summary>
        /// >> free
        /// </summary>
        public GenericExtrinsicCall Free(SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(5, "Indices", 2, "free", index);
        }
        
        /// <summary>
        /// >> force_transfer
        /// </summary>
        public GenericExtrinsicCall ForceTransfer(SubstrateNetApi.Model.SpCore.AccountId32 @new, SubstrateNetApi.Model.Types.Primitive.U32 index, SubstrateNetApi.Model.Types.Primitive.Bool freeze)
        {
            return new GenericExtrinsicCall(5, "Indices", 3, "force_transfer", @new, index, freeze);
        }
        
        /// <summary>
        /// >> freeze
        /// </summary>
        public GenericExtrinsicCall Freeze(SubstrateNetApi.Model.Types.Primitive.U32 index)
        {
            return new GenericExtrinsicCall(5, "Indices", 4, "freeze", index);
        }
    }
    
    /// <summary>
    /// >> IndexAssigned
    /// </summary>
    public sealed class EventIndexAssigned : BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32, SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> IndexFreed
    /// </summary>
    public sealed class EventIndexFreed : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32>
    {
    }
    
    /// <summary>
    /// >> IndexFrozen
    /// </summary>
    public sealed class EventIndexFrozen : BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32, SubstrateNetApi.Model.SpCore.AccountId32>
    {
    }
    
    public enum IndicesErrors
    {
        
        /// <summary>
        /// >> NotAssigned
        /// </summary>
        NotAssigned,
        
        /// <summary>
        /// >> NotOwner
        /// </summary>
        NotOwner,
        
        /// <summary>
        /// >> InUse
        /// </summary>
        InUse,
        
        /// <summary>
        /// >> NotTransfer
        /// </summary>
        NotTransfer,
        
        /// <summary>
        /// >> Permanent
        /// </summary>
        Permanent,
    }
}
